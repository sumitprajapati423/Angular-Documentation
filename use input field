// html file----------------
app-input use then elment this code------

 <div class="w-100 mt-1">
                <app-input [Required]="true" [Lable]="'Phone Number of the Staff'" [Minlength]="120" [Maxlength]="240" (OutputValue)="GetTitleinput($event)" [Placeholder]="'Number'"></app-input>
                
            </div>
            <div class="w-100 mt-1">
                <app-input [Required]="true" [Lable]="'Email'" [Minlength]="120" [Maxlength]="240"   [Placeholder]="'Email'"></app-input>
                
            </div>
            <div class="w-100 mt-1">
                <app-input [Required]="true" [Lable]="'Name of the Staff'" [Minlength]="120" [Maxlength]="240"   [Placeholder]="'Email'"></app-input>
                
            </div>
            <div class="w-100 mt-1">
                <app-input [Required]="true" [Lable]="'Permissions'" [Minlength]="120" [Maxlength]="240"   [Placeholder]="'Email'"></app-input>
                
            </div>
//--ts file -----------------------------------------
 GetTitleinput(event:any){
    if(event.length > 0){
      if(this.DisableLinkEditor != true){
        this.Spinner = true
        this.LinkValidation = false
        this.Editlink = event.toLowerCase()
        var obj = {
          type:'title',
          value:event
        }
        this.blogdata.Title.next(obj)
      }
    
    }else{
      var obj1 = {
        type:'title',
        value:""
      }
      this.LinkValidation = false
      this.LinkAvailability = false
      this.Spinner = false
      this.blogdata.Title.next(obj1)
      
    }
}

// use app-input in our code-------------
//-------------input htlm file-----
<div class="mt-4">
    <div class="d-flex justify-content-between align-items-center">
        <div style="font-size: 16px;">
            {{Lable}} <span *ngIf="Required" style="font-size: 18px; color: red;">*</span>
        </div>
        <span *ngIf="Maxlength > 0;" style="color:#868e96; margin-right: 10px;" >{{Length}}/ <span [ngStyle]="Length >= Minlength?{color:'red',right:'10px'}:{right:'10px',color:'#868e96'}">{{Minlength}}</span> </span>  
    </div>
   <div>
    <div class="w-100 mt-1 position-relative d-flex align-items-center">
        <input [ngClass]="Disable?'input_disable':'input'" class="w-100 input title_input theme_border" style="padding-right: 10px;" [formControl]="FormControl" [value]="FormControl.value" (keyup)="Returnvalue($event.target.value)" [disabled]="Disable"  [maxLength]="Maxlength > 0?Maxlength:1234567890" type="text" [placeholder]="Placeholder"> 

    </div>
    <span *ngIf=" FormControl.value =='' &&  FormControl.touched && Required"  style="color: red; font-size: 12px;">{{ErrMessage}}</span>
   </div>
  
</div>


//--------------------------input css file
.title_input:focus{
    border: 2px solid rgba(58,168,242,1);
    -webkit-box-shadow: 0px 0px 11px -1px rgba(58,168,242,1);
-moz-box-shadow: 0px 0px 11px -1px rgba(58,168,242,1);
box-shadow: 0px 0px 11px -3px rgba(58,168,242,1);
}
.input{
    height: 40px; border: 1px solid #b1b1b1; border-radius: 5px; outline: unset; font-size: 16px; padding-left: 10px;
    
}
.input_disable{
    height: 40px; border: 1px solid #b1b1b1; border-radius: 5px; outline: unset; font-size: 16px; padding-left: 10px; background-color: #f2f2f2;
    
}

//--------------------------input ts file -----------------------

import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-input',
  templateUrl: './input.component.html',
  styleUrls: ['./input.component.scss']
})
export class InputComponent implements OnInit,OnChanges{
@Input() FormControl = new FormControl('',Validators.required)
@Input() Lable:any = "title" 
@Input() ErrMessage:any = "This field is required"
@Input() Name:any = "name"
@Input() Value:any;
@Input() Placeholder:any = 'Text'
@Input() Maxlength:any = 120
@Input() Minlength:any = 60
@Input() Required:boolean = false
@Input() Disable:boolean = false
Touched:boolean = false
Dirty:boolean = false



@Output() OutputValue = new EventEmitter<any>()
Length:number = 0;

  constructor() { }
  ngOnChanges(changes: SimpleChanges): void {
    if(changes['Value']){
        this.FormControl.setValue(this.Value)
        this.Length = this.Value.length
  
    }
  
  }

  ngOnInit(): void {
  }
  Returnvalue(value: any) {
    
    this.Length = value.length
    this.OutputValue.emit(value)
    this.FormControl.setValue(value)
  
    if(value.length > 0){
      this.Touched = false
    }else{
      this.Touched = true
    }

  }

}


this input code use in commonconp module then use the other module --------------------------------------main
